// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetingAPI.Migrations
{
    [DbContext(typeof(BudgetingDbContext))]
    [Migration("20240521002153_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BudgetingCategory", b =>
                {
                    b.Property<int>("BudgetingCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetingCategoryId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RecurrenceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BudgetingCategoryId");

                    b.ToTable("BudgetingCategories");
                });

            modelBuilder.Entity("BudgetingPeriod", b =>
                {
                    b.Property<int>("BudgetingPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetingPeriodId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BudgetingPeriodId");

                    b.ToTable("BudgetingPeriods");
                });

            modelBuilder.Entity("Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BudgetingCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetingPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseId");

                    b.HasIndex("BudgetingCategoryId");

                    b.HasIndex("BudgetingPeriodId");

                    b.HasIndex("StoreId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<int?>("DefaultCategoryBudgetingCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StoreId");

                    b.HasIndex("DefaultCategoryBudgetingCategoryId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Purchase", b =>
                {
                    b.HasOne("BudgetingCategory", "Budget")
                        .WithMany()
                        .HasForeignKey("BudgetingCategoryId");

                    b.HasOne("BudgetingPeriod", null)
                        .WithMany("Purchases")
                        .HasForeignKey("BudgetingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Store", b =>
                {
                    b.HasOne("BudgetingCategory", "DefaultCategory")
                        .WithMany()
                        .HasForeignKey("DefaultCategoryBudgetingCategoryId");

                    b.Navigation("DefaultCategory");
                });

            modelBuilder.Entity("BudgetingPeriod", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
